{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Input/Input.module.css","components/Label/Label.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-action.js","redux/contacts/contacts-operations.js","components/Container/Container.js","components/Input/Input.js","components/Label/Label.js","components/options.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","getItems","state","contacts","items","getItemslength","length","getFilteredContacts","createSelector","filter","normalizedFilter","toLowerCase","name","includes","addContactsRequest","createAction","addContactsSuccess","addContactsError","removeContactRequest","removeContactSuccess","removeContactError","getContactsRequest","getContactsSuccess","getContactsError","changeFilter","URL","Container","children","className","s","container","Input","id","type","value","handleChange","options","input","onChange","event","pattern","title","required","Label","label","htmlFor","number","ContactForm","useState","setName","setNumber","nameInputId","uuidv4","numberInputId","useSelector","dispatch","useDispatch","onSubmit","item","axios","post","then","data","catch","error","addContact","target","reset","form","preventDefault","checkName","newName","find","undefined","alert","autoComplete","button","ContactList","list","map","btn__delete","onClick","delete","removeContact","Filter","App","contactsLength","useEffect","get","createReducer","_","payload","isLoading","combineReducers","store","configureStore","reducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06ce06a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn__delete\":\"ContactList_btn__delete__2u4p9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__2bY5z\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getItemslength = (state) => {\n  const contacts = getItems(state);\n  return contacts.length;\n};\n\n// export const getFilteredContacts = (state) => {\n//   const contacts = getItems(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\n// минимизация\nexport const getFilteredContacts = createSelector(\n  [getItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const removeContactRequest = createAction(\n  \"contacts/removeContactRequest\"\n);\nexport const removeContactSuccess = createAction(\n  \"contacts/removeContactSuccess\"\n);\nexport const removeContactError = createAction(\"contacts/removeContactError\");\n\nexport const getContactsRequest = createAction(\"contacts/getContactsRequest\");\nexport const getContactsSuccess = createAction(\"contacts/getContactsSuccess\");\nexport const getContactsError = createAction(\"contacts/getContactsError\");\n\nexport const changeFilter = createAction(\"contacts/filter\");\n","import {\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n} from \"./contacts-action\";\nimport axios from \"axios\";\n\nconst URL = \"http://localhost:4040\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(getContactsRequest());\n  axios\n    .get(`${URL}/contacts`)\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\n    .catch((error) => dispatch(getContactsError(error)));\n};\nexport const addContact = (name, number) => (dispatch) => {\n  const item = {\n    name,\n    number,\n  };\n  dispatch(addContactsRequest());\n  axios\n    .post(`${URL}/contacts`, item)\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\n    .catch((error) => dispatch(addContactsError(error)));\n};\n\nexport const removeContact = (id) => (dispatch) => {\n  dispatch(removeContactRequest);\n  axios\n    .delete(`${URL}/contacts/${id}`)\n    .then(() => dispatch(removeContactSuccess(id)))\n    .catch((error) => dispatch(removeContactError(error)));\n};\n","import PropTypes from \"prop-types\";\n\nimport s from \"./Container.module.css\";\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import PropTypes from \"prop-types\";\nimport s from \"./Input.module.css\";\nconst Input = ({ id, type, name, value, handleChange, options }) => {\n  return (\n    <input\n      className={s.input}\n      id={id}\n      type={type}\n      name={name}\n      value={value}\n      onChange={(event) => {\n        handleChange(event);\n      }}\n      pattern={options.pattern}\n      title={options.title}\n      required\n    />\n  );\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func,\n  options: PropTypes.shape({\n    pattern: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\nexport default Input;\n","import PropTypes from \"prop-types\";\nimport s from \"./Label.module.css\";\n\nconst Label = ({ id, title, children }) => {\n  return (\n    <label className={s.label} htmlFor={id}>\n      {title}\n      {children}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\nexport default Label;\n","const options = {\n  name: {\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n  },\n};\n\nexport default options;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport { getItems } from \"../../redux/contacts/contacts-selectors\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\nimport Input from \"../Input\";\nimport Label from \"../Label\";\nimport options from \"../options\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n  const onSubmit = () => dispatch(addContact(name, number));\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const checkName = (newName) =>\n      contacts.find(({ name }) => name === newName);\n\n    if (!checkName(name) ?? checkName(name) !== undefined) {\n      onSubmit(name, number);\n      reset();\n      return;\n    }\n    alert(`${name} is already in contacts`);\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label id={nameInputId} title=\"Name\">\n        <Input\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          handleChange={handleChange}\n          options={options.name}\n        />\n      </Label>\n      <Label id={numberInputId} title=\"Number\">\n        <Input\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          handleChange={handleChange}\n          options={options.number}\n        />\n      </Label>\n      <button className={s.button} type=\"submit\">\n        add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeContact } from \"../../redux/contacts/contacts-operations\";\nimport { getFilteredContacts } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.list}>\n      {contacts.map((item) => {\n        const { id, name, number } = item;\n        return (\n          <li key={id} className={s.item}>\n            {name}: {number}\n            <button\n              className={s.btn__delete}\n              type=\"button\"\n              onClick={() => dispatch(removeContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacts-action\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value }) => {\n  const dispatch = useDispatch();\n  const onChange = (event) => dispatch(changeFilter(event.target.value));\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getItemslength } from \"../../redux/contacts/contacts-selectors\";\nimport { fetchContacts } from \"../../redux/contacts/contacts-operations\";\n\nimport s from \"./App.module.css\";\nimport Container from \"../Container\";\nimport ContactForm from \"../ContactForm\";\nimport ContactList from \"../ContactList/\";\nimport Filter from \"../Filter\";\n\nconst App = () => {\n  const contactsLength = useSelector(getItemslength);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n  return (\n    <>\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm />\n      </Container>\n      {contactsLength > 0 ? (\n        <Container>\n          <h2 className={s.title}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Container>\n      ) : (\n        <Container>\n          <h2 className={s.title}>Phone book is empty</h2>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport {\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  changeFilter,\n} from \"./contacts-action\";\n\nconst items = createReducer([], {\n  [getContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [removeContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n\n  [removeContactRequest]: () => true,\n  [removeContactSuccess]: () => false,\n  [removeContactError]: () => false,\n\n  [getContactsRequest]: () => true,\n  [getContactsSuccess]: () => false,\n  [getContactsError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [addContactsError]: (_, { payload }) => payload,\n  [addContactsRequest]: () => null,\n\n  [removeContactError]: (_, { payload }) => payload,\n  [removeContactRequest]: () => null,\n\n  [getContactsError]: (_, { payload }) => payload,\n  [getContactsRequest]: () => null,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport contactReducer from \"./contacts/contacts-reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}